const errorMessages={"en-US":{required:"This field is required",minLength:"Minimum {0} characters are required",maxLength:"Maximum {0} characters allowed",numeric:"Please enter a valid number",min:"Value must be greater than or equal to {0}",max:"Value must be less than or equal to {0}",pattern:"Invalid pattern"},"fr-FR":{required:"Ce champ est requis",minLength:"Un minimum de {0} caractères est requis",maxLength:"Un maximum de {0} caractères est autorisé",numeric:"Veuillez entrer un nombre valide",min:"La valeur doit être supérieure ou égale à {0}",max:"La valeur doit être inférieure ou égale à {0}",pattern:"Modèle invalide"}};class InputValidation{constructor(e,t={},s={},a={},i="fr-FR"){this.inputElement=e,this.errors=[],this.successMessages=[],this.customSuccessMessages=a,this.customValidators=t,this.errorMessages=errorMessages[i],this.invalidBoxClass=s.error||"error-message",this.invalidInputClass=s.invalidInput||"",this.validBoxClass=s.success||"success-message",this.validInputClass=s.validInput||""}validate(){this.inputElement.hasAttribute("readonly")||this.inputElement.hasAttribute("disabled")||(this.inputElement.hasAttribute("required")&&!this.inputElement.value.trim()&&this.errors.push(this.errorMessages.required),this.validateAttributes(),this.runCustomValidations())}validateAttributes(){var t=this.inputElement.attributes;for(let e=0;e<t.length;e++){var s=t[e].name.toLowerCase();"min"===s||"max"===s?this.validateMinMax(s,parseFloat(t[e].value)):"minlength"===s||"maxlength"===s?this.validateMinMaxLength(s,parseInt(t[e].value,10)):"pattern"===s&&this.validatePattern(t[e].value)}}validateMinMax(e,t){var s=parseFloat(this.inputElement.value);isNaN(s)||("min"===e&&s<t?this.errors.push(this.errorMessages.min.replace("{0}",t)):"max"===e&&t<s&&this.errors.push(this.errorMessages.max.replace("{0}",t)))}validateMinMaxLength(e,t){var s=this.inputElement.value.trim();"minlength"===e&&s.length<t?this.errors.push(this.errorMessages.minLength.replace("{0}",t)):"maxlength"===e&&s.length>t&&this.errors.push(this.errorMessages.maxLength.replace("{0}",t))}validatePattern(e){var t=this.inputElement.value.trim();e&&!new RegExp(e).test(t)&&this.errors.push(this.errorMessages.pattern)}runCustomValidations(){var e=this.inputElement["name"],{override:e,validations:t}=this.customValidators[e]||{};e&&(this.errors=[]),t?.forEach(({errorMessage:e,condition:t})=>{t(this.inputElement)||this.errors.push(e)})}displayErrors(){var e=this.inputElement.parentNode.querySelector("."+this.invalidBoxClass);e&&(e.remove(),this.invalidInputClass)&&this.inputElement.classList.remove(""+this.invalidInputClass),0<this.errors.length&&((e=document.createElement("div")).className=this.invalidBoxClass,e.textContent=this.errors[0],this.inputElement.parentNode.appendChild(e),this.invalidInputClass)&&this.inputElement.classList.add(""+this.invalidInputClass)}displaySuccessMessage(){var e=this.inputElement.name||this.inputElement.getAttribute("name"),e=this.customSuccessMessages[e],t=this.inputElement.parentNode.querySelector("."+this.validBoxClass);t&&(t.remove(),this.validInputClass)&&this.inputElement.classList.remove(""+this.validInputClass),0===this.errors.length&&e&&e.condition(this.inputElement)&&((t=document.createElement("div")).className=this.validBoxClass,t.textContent=e.message,this.inputElement.parentNode.insertBefore(t,this.inputElement.nextSibling),this.validInputClass)&&this.inputElement.classList.add(""+this.validInputClass)}}class Controllet{constructor({formElement:e,customValidators:t,defaultValues:s={},inputModifiers:a={},customClasses:i={},customSuccessMessages:r={},locale:l="en-US"}){this.formElement=e,this.customValidators=t,this.locale=l,this.errors=[],this.submitCallback=null,this.defaultValues=s,this.inputModifiers=a,this.customSuccessMessages=r,this.customClasses=i,this.applyDefaultValues(),this.resetEventListener(),this.init()}init(){this.formElement.setAttribute("novalidate",!0),this.formElement.querySelectorAll("input, select, textarea").forEach(t=>{["input","change"].forEach(e=>{t.addEventListener(e,()=>this.validateInput(t))})}),this.formElement.addEventListener("submit",e=>{e.preventDefault(),this.validateForm()})}reset(t="soft"){this.formElement.querySelectorAll("input, select, textarea").forEach(e=>"hard"===t?"checkbox"!==e.type&&"radio"!==e.type?e.value="":e.checked=!1:this.applyDefaultValues())}resetEventListener(){this.formElement.addEventListener("reset",e=>{e.preventDefault(),this.clearErrors(),this.reset()})}clearErrors(e,t){this.formElement.querySelectorAll("."+e).forEach(e=>e.remove()),this.formElement.querySelectorAll("."+t).forEach(e=>{e.classList.remove(""+t)})}clearSuccessMessages(e,t){this.formElement&&""!==e&&this.formElement.querySelectorAll("."+e).forEach(e=>e.remove()),this.formElement&&""!==t&&this.formElement.querySelectorAll("."+t).forEach(e=>e.classList.remove(t))}applyDefaultValues(){Object.keys(this.defaultValues).forEach(e=>{var t,s=this.formElement.querySelector(`[name="${e}"]`);if(s){const a=this.defaultValues[e];"checkbox"===s.type?"object"==typeof a&&null!==a?(t=void 0!==a.value?a.value:a,(t=this.formElement.querySelector(`[name="${e}"][value="${t}"]`))?t.checked=Boolean(a.checked):this.formElement.querySelectorAll(`[name="${e}"]`).forEach(e=>{e.checked=Boolean(a.checked)})):s.checked=Boolean(a):"radio"===s.type?(t=void 0!==a.value?a.value:a,(t=this.formElement.querySelector(`[name="${e}"][value="${t}"]`))?t.checked=!0:s.checked=Boolean(a.checked)):s.value=a}else console.warn(`Field with name "${e}" not found.`)})}handleSubmit(e){this.submitCallback=e}modifySubmittedValue(e){var t=this.inputModifiers[e.name];return t?t(e.value):e.value}validateInput(e){e=new InputValidation(e,this.customValidators,this.customClasses,this.customSuccessMessages,this.locale);e.validate(),e.displayErrors(),e.displaySuccessMessage()}serializeForm(){var e=this.formElement.querySelectorAll("input, select, textarea");const r={};return e.forEach(e=>{var{name:e,type:t,value:s,checked:a,files:i}=e;"file"===t?r[e]=1===i.length?i[0]:Array.from(i):"checkbox"===t?(r[e]=r[e]||[],a&&r[e].push(s)):r[e]=s}),r}watch(e,i){var t=this.formElement.querySelectorAll(`[name="${e}"]`);0<t.length?t.forEach(s=>{const a=["INPUT","TEXTAREA","SELECT"].includes(s.tagName);var e=a?"input":"change",t=()=>{var e=new InputValidation(s,this.customValidators,this.customClasses,this.customSuccessMessages,this.locale);e.validate();let t;"INPUT"!==s.tagName||"checkbox"!==s.type&&"radio"!==s.type||(t=s.checked);e={errors:e.errors,value:a?s.value:void 0,raw:this.formElement.querySelectorAll("input, select, textarea"),...void 0!==t&&{checked:t}};i(e)};s.addEventListener(e,t),t()}):console.warn(`Input with name "${e}" not found.`)}validateForm(){var e=this.formElement.querySelectorAll("input, select, textarea");const s={status:!0,data:{},errors:[]};let a=null,i,r;e.forEach(e=>{var t=new InputValidation(e,this.customValidators,this.customClasses,this.customSuccessMessages,this.locale);i=t.validBoxClass,r=t.validInputClass,t.validate(),0<t.errors.length?(s.status=!1,s.errors.push({name:e.name,errors:t.errors}),a=a||e):(this.modifySubmittedValue(e),s.data[e.name]=e.value),t.displayErrors()}),a&&a.focus(),this.submitCallback&&(s.status&&this.clearSuccessMessages(i,r),this.submitCallback(s))}}